{
  "openapi": "3.0.1",
  "info": {
    "title": "TheCodeBuzz-Service API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local Development Server"
    }
  ],
  "paths": {
    "/events": {
      "post": {
        "summary": "Create an event",
        "tags": ["Events"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "description": "Event object to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              },
              "example": {
                "eventName": "Example Event",
                "eventDate": "2023-07-28",
                "location": "Sample Location",
                "description": "This is an example event."
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all events",
        "tags": ["Events"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/events/{eventId}/update": {
      "patch": {
        "summary": "Update an event",
        "tags": ["Events"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of the event to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Event not found"
          }
        },
        "requestBody": {
          "description": "Event object to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdate"
              },
              "example": {
                "eventName": "Updated Event",
                "eventDate": "2023-07-30",
                "location": "Updated Location",
                "description": "This is an updated event."
              }
            }
          }
        }
      }
    },
    "/events/{eventId}/join": {
      "post": {
        "summary": "User joins an event",
        "tags": ["Events"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of the event to join",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    },
    "/events/search": {
      "get": {
        "summary": "Search events",
        "tags": ["Events"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "Search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Event": {
        "type": "object",
        "properties": {
          "eventName": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date"
          },
          "location": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "EventCreate": {
        "type": "object",
        "properties": {
          "eventName": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date"
          },
          "location": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "eventName": "Example Event",
          "eventDate": "2023-07-28",
          "location": "Sample Location",
          "description": "This is an example event."
        }
      },
      "EventUpdate": {
        "type": "object",
        "properties": {
          "eventName": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date"
          },
          "location": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "eventName": "Updated Event",
          "eventDate": "2023-07-30",
          "location": "Updated Location",
          "description": "This is an updated event."
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
